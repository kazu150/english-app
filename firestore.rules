rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null
    }

    function isUserAuthenticated(uid){
      return isAuthenticated() && request.auth.uid == uid;
    }

    function isValidUser(user) {
      return user.size() == 4
        && user.createdAt == request.time
        && user.updatedAt == request.time
        && 'initialTime' in user && user.initialTime is number
        && 'englishService' in user && user.englishService is string

    }

    match /users/{uid} {
      allow update, create, read: if isUserAuthenticated(uid)
        && isValidUser(request.resource.data)
        && request.resource.data.createdAt == request.time
        && request.resource.data.updatedAt == request.time
        && request.resource.data.initialTime >= 0;
    }

    match /users/{uid}/studyLog/{id} {
      allow update, create, read: if isUserAuthenticated(uid);
    }

    match /publicProfiles/{uid} {
      allow read: if isAuthenticated();
      allow create, update: if isUserAuthenticated(uid);
    }

    match /englishServices/{englishServiceId} {
      allow read: if isAuthenticated();
    }

  }
}